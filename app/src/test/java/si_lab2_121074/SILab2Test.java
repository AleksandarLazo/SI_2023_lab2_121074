/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package si_lab2_121074;

import org.junit.Assert;
import org.junit.Test;

import java.util.ArrayList;

import static org.junit.Assert.*;

public class SILab2Test {
    @Test public void Test_Branch_Coverage_SILab2() {
        // Test case 1 User(aleksandar, test!288, aleksandar_lazo@hotmail.com), Users()
        User utc1 = new User("aleksandar", "test!288", "aleksandar_lazo@hotmail.com");
        ArrayList<User> ustc1 = new ArrayList<User>();
        // Test case 2 User(aleksandar, test!288, null), Users()
        User utc2 = new User("aleksandar", "test!288", null);
        ArrayList<User> ustc2 = new ArrayList<User>();
        // Test case 3 User(null, test1288, aleksandar_lazo@hotmail.com), Users((user1, password!1, email@tld.com))
        User utc3 = new User(null, "test1288", "aleksandar_lazo@hotmail.com");
        ArrayList<User> ustc3 = new ArrayList<User>();
        ustc3.add(new User("user1", "password!1", "email@tld.com"));
        // Test case 4 User(aleksandar1, aleksandar1, email.com), Users((aleksandar, test!288, aleksandar_lazo@hotmail.com)
        User utc4 = new User("aleksandar1", "aleksandar1", "email.com");
        ArrayList<User> ustc4 = new ArrayList<User>();
        ustc4.add(new User("aleksandar", "test!288", "aleksandar_lazo@hotmail.com"));
        // Test case 5 User(aleksandar, pass word, aleksandar_lazo@hotmail.com), Users((aleksandar, passwo!23, aleksandar_lazo@hotmail.com))
        User utc5 = new User("aleksandar", "pass word", "aleksandar_lazo@hotmail.com");
        ArrayList<User> ustc5 = new ArrayList<User>();
        ustc5.add(new User("aleksandar", "passwo!23", "aleksandar_lazo@hotmail.com"));

        assertTrue(SILab2.function(utc1, ustc1));
        assertEquals("Mandatory information missing!", assertThrows(RuntimeException.class, () -> SILab2.function(utc2, ustc2)).getMessage());
        assertFalse(SILab2.function(utc3, ustc3));
        assertFalse(SILab2.function(utc4, ustc4));
        assertFalse(SILab2.function(utc5, ustc5));
    }

    @Test public void Test_Multiple_Condition_SILab2() {
        // TXX	User = null
        // FTX	User(“username”, null, “email@tld.com”)
        // FFT	User(“username”, “password!2”, null)
        // FFF	User(“username”, “password!2”, “email@tld.com”)
        User utc1 = null;
        User utc2 = new User("username", null, "email@tld.com");
        User utc3 = new User("username", "password!2", null);
        User utc4 = new User("username", "password!2", "email@tld.com");
        ArrayList<User> ustc = new ArrayList<User>();
        // case 1
        String utc1_m = "";
        try
        {
            SILab2.function(utc1, ustc);
        }
        catch(RuntimeException e)
        {
            utc1_m = e.getMessage();
        }
        assertEquals("Mandatory information missing!", utc1_m);
        // case 2
        Exception exception = assertThrows(RuntimeException.class, () -> SILab2.function(utc2, ustc));
        assertTrue(exception.getMessage().equals("Mandatory information missing!"));
        // case 3
        assertEquals("Mandatory information missing!", assertThrows(RuntimeException.class, () -> SILab2.function(utc3, ustc)).getMessage());
        // case 4
        assertTrue(SILab2.function(utc4, ustc));
    }
}
